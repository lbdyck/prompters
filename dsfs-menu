#!/bin/env bash
clear

VER="0.038"

#----------------------------------------------------------------#
# Name: dsfs-menu                                                #
#                                                                #
# Purpose: A simple to use (hopefully) prompting menu for the    #
#          dsfs dsadm command to help the average user find      #
#          and use these commands.                               #
#                                                                #
# Dependencies:  gum or less or more                             #
#                bash is required as /bin/sh does not work with  #
#                gum pager but works fine for less/more          #
#                                                                #
# Author/Contributors (or whom to blame for this)                #
#   Lionel B. Dyck (lbdyck@gmail.com)                            #
#                                                                #
# Change History (top down):                                     #
#    2024/10/29 LBD - 0.038 Change from z/OS Open Tools to zopen #
#    2024/07/04 LBD - 0.037 Fix to use gsed                      #
#    2024/02/02 LBD - 0.036 Add exports for _TAG to fix display  #
#    2024/02/01 LBD - 0.035 Fix createparm                       #
#    2024/01/30 LBD - 0.034 Add level option for dsfs maint lvl  #
#    2024/01/28 LBD - 0.033 More experimentation with createparm #
#    2024/01/27 LBD - 0.032 Fix createparm quotes                #
#                           and default SEC to PRIM if blank     #
#    2024/01/25 LBD - 0.031 more cleanup                         #
#    2024/01/22 LBD - 0.03 add comment about more as an option   #
#                   -      improve colors and prompting          #
#    2024/01/22 LBD - 0.02 add comments and generalize pager     #
#    2024/01/08 LBD - 0.00 creation                              #
#                                                                #
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Comment and uncomment to define which pager to use for viewing #
#----------------------------------------------------------------#
PAGER="gum pager"
# PAGER="more"
# PAGER="less"

#----------------------------------------------------------------#
# Define the REDIR's and TERM to our liking                      #
#----------------------------------------------------------------#
export _TAG_REDIR_IN=txt
export _TAG_REDIR_OUT=txt
export _TAG_REDIR_ERR=txt

export TERM=xterm-256color

#----------------------------------------------------------------#
# Define the color for the banner                                #
#  5 - purple                                                    #
# 12 - blue shade                                                #
# 33 - darker blue                                               #
# 46 - green                                                     #
# 51 - turq shade                                                #
#----------------------------------------------------------------#
COLOR=51

#----------------------------------------------------------------#
# Display our banner telling everyone who we are                 #
#----------------------------------------------------------------#
gum style \
        --foreground $COLOR --border-foreground $COLOR --border double \
        --align center --width 50 --margin "1 2" --padding "2 4" \
        'zopen dsfs User Menu' $VER

#----------------------------------------------------------------#
# Define the gum env variables                                   #
#----------------------------------------------------------------#
export GUM_INPUT_CURSOR_FOREGROUND="#$COLOR"
export GUM_INPUT_PROMPT_FOREGROUND="#$COLOR"
export GUM_INPUT_PLACEHOLDER=". . ."
export GUM_IMPORT_PROMPT="* "

SEL=$(gum choose "createparm" "fileinfo" "fsinfo" "help" "query" "configquery" "level" --header "Select DSFS Action:" \
     --header.foreground="$COLOR")
case "$SEL" in
  createparm)
    echo "Selected" $SEL
    DUID=$(id -u -n)
    HLQ=$(gum input --header=" HLQ to create - must be at least 2 qualifiers and the 1st must match your userid:" \
        --header.foreground="11" --placeholder="Enter HLQ" )
    if [[ $HLQ != *.* ]]; then
       echo 'HLQ must have multiple qualifiers.'
       exit 0
    fi
    THLQ=$(echo "$HLQ" | tr '[:lower:]' '[:upper:]')
    if [[ ! "$THLQ" == "$DUID"* ]]; then
       echo 'HLQ does NOT match your userid as it must - try again.'
       exit 0
    fi
    HLQ=$(echo $HLQ | tr '[:upper:]' '[:lower:]')
    TYPE=$(gum choose "txt" "bin" "rec" --header "Select DSFS type:" --header.foreground="11")
    DSORG=$(gum choose "PS" "PO" --header "Select dataset model type:" --header.foreground="11")

    if [ "$DSORG" = "PO" ]; then
       DSORG="dsorg(po) dsntype(library)"
       MODEL="-pdsmodel"
    elif [ "$DSORG" = "PS" ]; then
       DSORG="dsorg(ps)"
       MODEL="-psmodel"
    fi

    RECFM=$(gum choose "FB" "VB" --header "Select Record Format:" --header.foreground="11")
    LRECL=$(gum input --header "Enter the LRECL for the model:" --header.foreground="11")
    BLKSZ=$(gum input --header "Enter the Blocksize for the model (0):" --header.foreground="11")

    if [ -z "$BLKSZ" ]; then
       BLKSZ=0
    fi

    SPACE=$(gum choose "tracks" "cyl" --header.foreground="11" --header "Enter Allocation Type:")
    PRIM=$(gum input --header.foreground="11" --header "Enter Primary Space Quantity: (1)")

    if [ -z "$PRIM" ]; then
       PRIM=1
    fi
    SEC=$(gum input  --header.foreground="11" --header "Enter Secondary Space Quantity: ($PRIM)")

    if [ -z "$SEC" ]; then
       SEC="$PRIM"
    fi
    DATAC=$(gum input --width 8 --header "SMS Data Class:" --header.foreground="11")
    MGMTC=$(gum input --width 8 --header "SMS Management Class:" --header.foreground="11")
    STORC=$(gum input --width 8 --header "SMS Storage Class:" --header.foreground="11")

    if [ -n "$DATAC" ]; then
       DSORG="$DSORG dataclas("$DATAC")"
    fi

    if [ -n "$MGMTC" ]; then
       DSORG="$DSORG mgmtclas("$MGMTC")"
    fi

    if [ -n "$STORC" ]; then
       DSORG="$DSORG storclas("$STORC")"
    fi

echo  'Generated Command:' dsadm createparm -path /dsfs/$TYPE/$HLQ $MODEL \
        '"'"$DSORG recfm($RECFM) lrecl($LRECL) blksize($BLKSZ) $SPACE space($PRIM,$SEC)"'"'
 PART2="$DSORG recfm($RECFM) $SPACE space($PRIM,$SEC) lrecl($LRECL) blksize($BLKSZ)"

 dsadm createparm -path /dsfs/$TYPE/$HLQ $MODEL "$PART2" \
    | dsadm fileinfo -path /dsfs/$TYPE/$HLQ \
    | $PAGER
    ;;

  fileinfo)
    HLQ=$(gum input --header "Enter HLQ to report on" --header.foreground="11")
    TYPE=$(gum choose "txt" "bin" "rec" --header "Select DSFS type:" --header "Enter the dsfs type:" \
         --header.foreground="11")
    dsadm fileinfo -path /dsfs/$TYPE/$HLQ | $PAGER
    ;;
  fsinfo)
    dsadm fsinfo | $PAGER
    ;;
  help)
    HELP=$(gum choose "config" "configquery" "createparm" "fileinfo" "fsinfo" "query" --header "Select DSFS command:" \
         --header.foreground="11")
    dsadm help -topic $HELP | $PAGER
    ;;
  query)
    QUERY=$(gum choose "compression" "dscache" "filecache" "iobydasd" "knpfs" "locking" "metacache" \
              "storage" "vnodecache" "level" --no-limit --header "Select query options:" --header.foreground="11")
    QUERY=$(echo $QUERY | gsed 's/\b\(\w\)/ -\1/g')
    dsadm query $QUERY | $PAGER
    ;;
  configquery)
    dsadm configquery -all | $PAGER
    ;;
  level)
    dsadm level | $PAGER
    ;;
esac

if [ -z "$SEL" ]; then
   echo 'No selection....'
fi
